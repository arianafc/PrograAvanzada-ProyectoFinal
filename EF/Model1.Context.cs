//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoFinal.EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CASA_NATURAEntities : DbContext
    {
        public CASA_NATURAEntities()
            : base("name=CASA_NATURAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ACTIVIDADES_TB> ACTIVIDADES_TB { get; set; }
        public virtual DbSet<ANIMAL_TB> ANIMAL_TB { get; set; }
        public virtual DbSet<APADRINAMIENTOS_TB> APADRINAMIENTOS_TB { get; set; }
        public virtual DbSet<CANTONES_TB> CANTONES_TB { get; set; }
        public virtual DbSet<CONSULTAS> CONSULTAS { get; set; }
        public virtual DbSet<DIRECCIONES_TB> DIRECCIONES_TB { get; set; }
        public virtual DbSet<DISTRITOS_TB> DISTRITOS_TB { get; set; }
        public virtual DbSet<DONACIONES_TB> DONACIONES_TB { get; set; }
        public virtual DbSet<ESPECIES_TB> ESPECIES_TB { get; set; }
        public virtual DbSet<ESTADOS_SALUD_TB> ESTADOS_SALUD_TB { get; set; }
        public virtual DbSet<ESTADOS_TB> ESTADOS_TB { get; set; }
        public virtual DbSet<METODO_PAGO_TB> METODO_PAGO_TB { get; set; }
        public virtual DbSet<PROVINCIAS_TB> PROVINCIAS_TB { get; set; }
        public virtual DbSet<RAZAS_TB> RAZAS_TB { get; set; }
        public virtual DbSet<ROLES_TB> ROLES_TB { get; set; }
        public virtual DbSet<USUARIO_ACTIVIDAD_TB> USUARIO_ACTIVIDAD_TB { get; set; }
        public virtual DbSet<USUARIOS_TB> USUARIOS_TB { get; set; }
    
        public virtual ObjectResult<LoginSP_Result> LoginSP(string cORREO, string cONTRASENNA)
        {
            var cORREOParameter = cORREO != null ?
                new ObjectParameter("CORREO", cORREO) :
                new ObjectParameter("CORREO", typeof(string));
    
            var cONTRASENNAParameter = cONTRASENNA != null ?
                new ObjectParameter("CONTRASENNA", cONTRASENNA) :
                new ObjectParameter("CONTRASENNA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoginSP_Result>("LoginSP", cORREOParameter, cONTRASENNAParameter);
        }
    
        public virtual int RecuperarAccesoSP(string cONTRASENNA, string cORREO)
        {
            var cONTRASENNAParameter = cONTRASENNA != null ?
                new ObjectParameter("CONTRASENNA", cONTRASENNA) :
                new ObjectParameter("CONTRASENNA", typeof(string));
    
            var cORREOParameter = cORREO != null ?
                new ObjectParameter("CORREO", cORREO) :
                new ObjectParameter("CORREO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RecuperarAccesoSP", cONTRASENNAParameter, cORREOParameter);
        }
    
        public virtual int RegistroSP(string nOMBRE, string aPELLIDO1, string aPELLIDO2, string cORREO, string cONTRASENNA, string iDENTIFICACION)
        {
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var aPELLIDO1Parameter = aPELLIDO1 != null ?
                new ObjectParameter("APELLIDO1", aPELLIDO1) :
                new ObjectParameter("APELLIDO1", typeof(string));
    
            var aPELLIDO2Parameter = aPELLIDO2 != null ?
                new ObjectParameter("APELLIDO2", aPELLIDO2) :
                new ObjectParameter("APELLIDO2", typeof(string));
    
            var cORREOParameter = cORREO != null ?
                new ObjectParameter("CORREO", cORREO) :
                new ObjectParameter("CORREO", typeof(string));
    
            var cONTRASENNAParameter = cONTRASENNA != null ?
                new ObjectParameter("CONTRASENNA", cONTRASENNA) :
                new ObjectParameter("CONTRASENNA", typeof(string));
    
            var iDENTIFICACIONParameter = iDENTIFICACION != null ?
                new ObjectParameter("IDENTIFICACION", iDENTIFICACION) :
                new ObjectParameter("IDENTIFICACION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistroSP", nOMBREParameter, aPELLIDO1Parameter, aPELLIDO2Parameter, cORREOParameter, cONTRASENNAParameter, iDENTIFICACIONParameter);
        }
    }
}
